diff --git a/core/xmipp_metadata_program.cpp b/core/xmipp_metadata_program.cpp
index c213c13..74f0ffc 100644
--- a/core/xmipp_metadata_program.cpp
+++ b/core/xmipp_metadata_program.cpp
@@ -325,6 +325,26 @@ void XmippMetadataProgram::checkPoint()
 {
 }
 
+bool XmippMetadataProgram::getImageToProcess(size_t &objId, size_t &objIndex)
+{
+    static size_t _objIndex = 0;
+    if (nullptr == iter) {
+        iter = std::unique_ptr<MetaData::id_iterator>(new MetaData::id_iterator(mdIn->ids().begin()));
+        _objIndex = 0;
+    } else {
+        ++(*iter);
+        ++_objIndex;
+    }
+
+    ++time_bar_done;
+    objIndex = _objIndex;
+    bool isValid = *iter != mdIn->ids().end();
+    if (isValid) {
+        objId = **iter;
+    }
+    return isValid;
+}
+
 void XmippMetadataProgram::run()
 {
     FileName fnImg, fnImgOut, fullBaseName;
@@ -348,12 +368,13 @@ void XmippMetadataProgram::run()
         pathBaseName   = fullBaseName.getDir();
     }
 
-    size_t objIndex = 1; // start at 1
+    size_t objIndex = 0;
     time_bar_done = 0;
-
-    for (const auto& row : *mdIn)
+    size_t objId;
+    while (getImageToProcess(objId, objIndex))
     {
-        row.getValue(image_label, fnImg);
+        auto row = mdIn->getRow(objId);
+        row->getValue(image_label, fnImg);
 
         if (fnImg.empty())
             break;
@@ -388,12 +409,12 @@ void XmippMetadataProgram::run()
             }
             else
                 fnImgOut = fnImg;
-            setupRowOut(fnImg, row, fnImgOut, rowOut);
+            setupRowOut(fnImg, *row.get(), fnImgOut, rowOut);
         }
         else if (produces_a_metadata)
-            setupRowOut(fnImg, row, fnImgOut, rowOut);
+            setupRowOut(fnImg, *row.get(), fnImgOut, rowOut);
 
-        processImage(fnImg, fnImgOut, row, rowOut);
+        processImage(fnImg, fnImgOut, *row.get(), rowOut);
 
         if (each_image_produces_an_output || produces_a_metadata)
             mdOut.addRow(rowOut);
diff --git a/core/xmipp_metadata_program.h b/core/xmipp_metadata_program.h
index dfd8429..501aff9 100644
--- a/core/xmipp_metadata_program.h
+++ b/core/xmipp_metadata_program.h
@@ -48,6 +48,8 @@ private:
     MetaData * mdIn = nullptr;
     MetaDataVec mdOut; //TODO: can be treated by reference as mdIn for
     // uses from another programs...
+    std::unique_ptr<MetaData::id_iterator> iter;
+
 public:
     /// The input metadata should not be used
     /// if there is a very very special case
@@ -128,6 +130,7 @@ protected:
     virtual void preProcess();
     virtual void postProcess();
     virtual void processImage(const FileName &fnImg, const FileName &fnImgOut, const MDRow &rowIn, MDRow &rowOut) = 0;
+    virtual bool getImageToProcess(size_t &objId, size_t &objIndex);
     virtual void show();
     /** Do some stuff before starting processing
      * in a parallel environment usually this only be executed
